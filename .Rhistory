geom_point() +
theme_minimal() +
theme(legend.position="bottom")
View(matrix2)
View(matrix2)
ggplot(matrix2, aes(x = ano_ingresso, y = periodo_ingresso, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0, limit = c(-1, 1), space = "Lab", name="Correlação") +
theme_minimal() +
labs(title = "Mapa de Calor das Correlações", x = "Variáveis", y = "Variáveis") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
View(matrix)
View(matrix)
ggplot(dados_num, aes(x = ano_ingresso, y = periodo_ingresso, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0, limit = c(-1, 1), space = "Lab", name="Correlação") +
theme_minimal() +
labs(title = "Mapa de Calor das Correlações", x = "Variáveis", y = "Variáveis") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
ggplot(dados_num, aes(x = ano_ingresso, y = periodo_ingresso, fill = value)) +
geom_tile() +
ggplot(dados_num, aes(x = ano_ingresso, y = periodo_ingresso, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0, limit = c(-1, 1), space = "Lab", name="Correlação") +
ggplot(dados_num, aes(x = ano_ingresso, y = periodo_ingresso, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0, limit = c(-1, 1), space = "Lab", name="Correlação") +
theme_minimal()
ggplot(dados_num, aes(x = ano_ingresso, y = periodo_ingresso, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0, limit = c(-1, 1), space = "Lab", name="Correlação") +
theme_minimal()
ggplot(dados_num, aes(x = ano_ingresso, y = periodo_ingresso, fill = matricula)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0, limit = c(-1, 1), space = "Lab", name="Correlação") +
theme_minimal() +
labs(title = "Mapa de Calor das Correlações", x = "Variáveis", y = "Variáveis") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
View(matrix)
View(matrix)
View(matrix2)
View(matrix2)
ggplot(matrix, aes(x = id_cursso, fill = Sex_Mas)) +
geom_bar(position = "dodge") +
theme_minimal() +
labs(title = "Distribuição de Gênero por Curso", x = "Curso", y = "Contagem") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
View(matrix)
View(matrix)
ggplot(dados_combinados, aes(x = forma_ingresso, fill = status)) +
geom_bar(position = "dodge") +
theme_minimal() +
labs(title = "Forma de Ingresso e Sucesso Acadêmico", x = "Forma de Ingresso", y = "Contagem") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(matrix, aes(x = id_cursso, fill = Sex_Mas)) +
geom_bar(position = "dodge") +
theme_minimal() +
labs(title = "Distribuição de Gênero por Curso", x = "Curso", y = "Contagem") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(matrix, aes(x = id_curso, fill = Sex_Mas)) +
geom_bar(position = "dodge") +
theme_minimal() +
labs(title = "Distribuição de Gênero por Curso", x = "Curso", y = "Contagem") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(matrix, aes(x = id_curso, fill = Sex_Mas))
ggplot(dados_num, aes(x = id_curso, y = Sex_Mas, fill = matricula)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0, limit = c(-1, 1), space = "Lab", name="Correlação") +
theme_minimal() +
labs(title = "Mapa de Calor das Correlações", x = "Variáveis", y = "Variáveis") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
corrplot(matrix2, method = 'circle', type = 'lower', title = "Matriz de Correlação 2", na.label = ".") +
geom_point() +
theme_minimal() +
theme(legend.position="bottom")
corrplot(matrix2, method = 'circle', type = 'lower', title = "Matriz de Correlação 2", na.label = ".") +
geom_point() +
theme_minimal() +
theme(legend.position="bottom")
corrplot(matrix2, method = 'circle', type = 'lower', title = "Matriz de Correlação 2",  na.omit(), na.label = ".") +
geom_point() +
theme_minimal() +
theme(legend.position="bottom")
corrplot(matrix2, method = 'circle', type = 'lower', title = "Matriz de Correlação 2", na.label = ".") +
geom_point() +
theme_minimal() +
theme(legend.position="bottom")
windows(width = 30, height = 20) # Para Windows
#na.omit()
#Gráfico 2
corrplot(matrix2, method = 'circle', type = 'lower', title = "Matriz de Correlação 2", na.label = ".") +
geom_point() +
theme_minimal() +
theme(legend.position="bottom")
dados2 <- dados_combinados %>%
count(matricula) %>%
mutate(
Sex_Fem = ifelse(sexo == "F", 1, 0),
Sex_Mas = ifelse(sexo == "M", 1, 0),
FI_SiSU = ifelse(forma_ingresso == "SiSU", 1, 0),
FI_PRO_SEL = ifelse(forma_ingresso == "PROCESSO SELETIVO", 1, 0),
FI_AL_ESP_POS = ifelse(forma_ingresso == "ALUNO ESPECIAL POS-GRADUACAO", 1, 0),
#    FI_NA = ifelse(forma_ingresso == "NAO INFORMADO", 1, 0),
FI_RVR = ifelse(forma_ingresso == "REOCUPAÇÃO DE VAGAS RESIDUAIS", 1, 0),
FI_VEST = ifelse(forma_ingresso == "VESTIBULAR", 1, 0),
FI_RE_SEG_CI = ifelse(forma_ingresso == "REINGRESSO SEGUNDO CICLO", 1, 0),
FI_SEL_POS = ifelse(forma_ingresso == "SELEÇÃO DE PÓS-GRADUAÇÃO", 1, 0),
#    FI_AL_MOB_INT = ifelse(forma_ingresso == "ALUNO EM MOBILIDADE INTERNACIONAL", 1, 0),
#    FI_AL_MOB_NAC = ifelse(forma_ingresso == "ALUNO EM MOBILIDADE NACIONAL", 1, 0),
#    FI_TRAS_COM = ifelse(forma_ingresso == "TRANSF. COMPULSORIA", 1, 0),
#    FI_COO_INT = ifelse(forma_ingresso == "COOPERAÇÃO INTERNACIONAL", 1, 0),
#    FI_MOB_INT = ifelse(forma_ingresso == "MOBILIDADE INTERNACIONAL", 1, 0),
#    FI_NEI = ifelse(forma_ingresso == "NEI", 1, 0),
#    FI_AL_ESP = ifelse(forma_ingresso == "ALUNO ESPECIAL" , 1, 0),
#    FI_EST_COMP = ifelse(forma_ingresso == "ESTUDOS COMPLEMENTARES" , 1, 0),
#    FI_JUD = ifelse(forma_ingresso == "JUDICIAL", 1, 0),
#    FI_PER_SED = ifelse(forma_ingresso == "PERMUTA DE SEDE", 1, 0),
#    FI_REI_AUT = ifelse(forma_ingresso == "REINGRESSO AUTOMATICO", 1, 0),
#    FI_CON_PEC = ifelse(forma_ingresso == "CONVENIO PEC-G", 1, 0),
FI_PES = ifelse(forma_ingresso == "PES", 1, 0),
#    FI_TAL_MET = ifelse(forma_ingresso == "TALENTO METRÓPOLE", 1, 0),
#    FI_TRANSF = ifelse(forma_ingresso == "TRANSFERÊNCIA", 1, 0),
#    FI_MUD_CUR = ifelse(forma_ingresso == "MUDANÇA DE CURSO", 1, 0),
FI_PRO_SEL_ESP = ifelse(forma_ingresso == "PROCESSO SELETIVO ESPECÍFICO", 1, 0),
#    FI_ORD_JUD = ifelse(forma_ingresso == "ORDEM JUDICIAL", 1, 0),
FI_PRO_SEL_EXT_TEC = ifelse(forma_ingresso == "PROCESSO SELETIVO EXTERNO TÉCNICO", 1, 0),
#    FI_SORT = ifelse(forma_ingresso == "SORTEIO", 1, 0),
FI_PROM = ifelse(forma_ingresso == "PROMOVER", 1, 0),
#    FI_SISU2 = ifelse(forma_ingresso == "SiSU 2a Edição", 1, 0),
FI_PRO_SEL_EXT_TEC_INT = ifelse(forma_ingresso == "PROCESSO SELETIVO EXTERNO TÉCNICO INTEGRADO", 1, 0),
FI_EAD_REM_GER = ifelse(forma_ingresso == "EAD REMANESCENTES GERAL", 1, 0),
FI_EAD_REM_ADM = ifelse(forma_ingresso == "EAD REMANESCENTES ADM", 1, 0),
#    FI_THE_MUS = ifelse(forma_ingresso == "THE_MUSICA", 1, 0),
#    FI_DAN_REM = ifelse(forma_ingresso == "DANÇA REMANESCENTES", 1, 0),
#    FI_THE_DAN = ifelse(forma_ingresso == "THE_DANCA", 1, 0),
#    FI_PRON = ifelse(forma_ingresso == "PRONERA", 1, 0),
#    FI_REM_GES_COO = ifelse(forma_ingresso == "REMANESCENTES GESTAO COOPERATIVAS", 1, 0),
#    FI_TRA_VOL = ifelse(forma_ingresso == "TRANSFERÊNCIA VOLUNTÁRIA" , 1, 0),
#    FI_REI_ESP = ifelse(forma_ingresso == "REINGRESSO ESPECÍFICO", 1, 0),
TD_REG = ifelse(tipo_discente == "REGULAR", 1, 0),
TD_ESP = ifelse(tipo_discente == "ESPECIAL", 1, 0),
ST_CANCELADO = ifelse(status == "CANCELADO" , 1, 0),
ST_CONCLUIDO = ifelse(status == "CONCLUÍDO" , 1, 0),
ST_FORMADO = ifelse(status == "FORMADO" , 1, 0),
ST_ATIVO = ifelse(status == "ATIVO" , 1, 0),
ST_DEFENDIDO = ifelse(status == "DEFENDIDO" , 1, 0),
ST_AT_FORMANDO = ifelse(status == "ATIVO - FORMANDO" , 1, 0),
ST_TRANCADO = ifelse(status == "TRANCADO" , 1, 0),
ST_CADASTRADO = ifelse(status == "CADASTRADO" , 1, 0),
#    FI_ = ifelse(sexo == , 1, 0),
#    FI_ = ifelse(sexo == , 1, 0),
#    FI_ = ifelse(sexo == , 1, 0),
#    FI_ = ifelse(sexo == , 1, 0),
)
View(dados2)
View(dados2)
dados2 <- dados_combinados %>%
count(matricula) %>%
mutate(
Sex_Fem = ifelse(sexo == "F", 1, 0),
Sex_Mas = ifelse(sexo == "M", 1, 0),
FI_SiSU = ifelse(forma_ingresso == "SiSU", 1, 0),
FI_PRO_SEL = ifelse(forma_ingresso == "PROCESSO SELETIVO", 1, 0),
FI_AL_ESP_POS = ifelse(forma_ingresso == "ALUNO ESPECIAL POS-GRADUACAO", 1, 0),
#    FI_NA = ifelse(forma_ingresso == "NAO INFORMADO", 1, 0),
FI_RVR = ifelse(forma_ingresso == "REOCUPAÇÃO DE VAGAS RESIDUAIS", 1, 0),
FI_VEST = ifelse(forma_ingresso == "VESTIBULAR", 1, 0),
FI_RE_SEG_CI = ifelse(forma_ingresso == "REINGRESSO SEGUNDO CICLO", 1, 0),
FI_SEL_POS = ifelse(forma_ingresso == "SELEÇÃO DE PÓS-GRADUAÇÃO", 1, 0),
#    FI_AL_MOB_INT = ifelse(forma_ingresso == "ALUNO EM MOBILIDADE INTERNACIONAL", 1, 0),
#    FI_AL_MOB_NAC = ifelse(forma_ingresso == "ALUNO EM MOBILIDADE NACIONAL", 1, 0),
#    FI_TRAS_COM = ifelse(forma_ingresso == "TRANSF. COMPULSORIA", 1, 0),
#    FI_COO_INT = ifelse(forma_ingresso == "COOPERAÇÃO INTERNACIONAL", 1, 0),
#    FI_MOB_INT = ifelse(forma_ingresso == "MOBILIDADE INTERNACIONAL", 1, 0),
#    FI_NEI = ifelse(forma_ingresso == "NEI", 1, 0),
#    FI_AL_ESP = ifelse(forma_ingresso == "ALUNO ESPECIAL" , 1, 0),
#    FI_EST_COMP = ifelse(forma_ingresso == "ESTUDOS COMPLEMENTARES" , 1, 0),
#    FI_JUD = ifelse(forma_ingresso == "JUDICIAL", 1, 0),
#    FI_PER_SED = ifelse(forma_ingresso == "PERMUTA DE SEDE", 1, 0),
#    FI_REI_AUT = ifelse(forma_ingresso == "REINGRESSO AUTOMATICO", 1, 0),
#    FI_CON_PEC = ifelse(forma_ingresso == "CONVENIO PEC-G", 1, 0),
FI_PES = ifelse(forma_ingresso == "PES", 1, 0),
#    FI_TAL_MET = ifelse(forma_ingresso == "TALENTO METRÓPOLE", 1, 0),
#    FI_TRANSF = ifelse(forma_ingresso == "TRANSFERÊNCIA", 1, 0),
#    FI_MUD_CUR = ifelse(forma_ingresso == "MUDANÇA DE CURSO", 1, 0),
FI_PRO_SEL_ESP = ifelse(forma_ingresso == "PROCESSO SELETIVO ESPECÍFICO", 1, 0),
#    FI_ORD_JUD = ifelse(forma_ingresso == "ORDEM JUDICIAL", 1, 0),
FI_PRO_SEL_EXT_TEC = ifelse(forma_ingresso == "PROCESSO SELETIVO EXTERNO TÉCNICO", 1, 0),
#    FI_SORT = ifelse(forma_ingresso == "SORTEIO", 1, 0),
FI_PROM = ifelse(forma_ingresso == "PROMOVER", 1, 0),
#    FI_SISU2 = ifelse(forma_ingresso == "SiSU 2a Edição", 1, 0),
FI_PRO_SEL_EXT_TEC_INT = ifelse(forma_ingresso == "PROCESSO SELETIVO EXTERNO TÉCNICO INTEGRADO", 1, 0),
FI_EAD_REM_GER = ifelse(forma_ingresso == "EAD REMANESCENTES GERAL", 1, 0),
FI_EAD_REM_ADM = ifelse(forma_ingresso == "EAD REMANESCENTES ADM", 1, 0),
#    FI_THE_MUS = ifelse(forma_ingresso == "THE_MUSICA", 1, 0),
#    FI_DAN_REM = ifelse(forma_ingresso == "DANÇA REMANESCENTES", 1, 0),
#    FI_THE_DAN = ifelse(forma_ingresso == "THE_DANCA", 1, 0),
#    FI_PRON = ifelse(forma_ingresso == "PRONERA", 1, 0),
#    FI_REM_GES_COO = ifelse(forma_ingresso == "REMANESCENTES GESTAO COOPERATIVAS", 1, 0),
#    FI_TRA_VOL = ifelse(forma_ingresso == "TRANSFERÊNCIA VOLUNTÁRIA" , 1, 0),
#    FI_REI_ESP = ifelse(forma_ingresso == "REINGRESSO ESPECÍFICO", 1, 0),
TD_REG = ifelse(tipo_discente == "REGULAR", 1, 0),
TD_ESP = ifelse(tipo_discente == "ESPECIAL", 1, 0),
ST_CANCELADO = ifelse(status == "CANCELADO" , 1, 0),
ST_CONCLUIDO = ifelse(status == "CONCLUÍDO" , 1, 0),
ST_FORMADO = ifelse(status == "FORMADO" , 1, 0),
ST_ATIVO = ifelse(status == "ATIVO" , 1, 0),
ST_DEFENDIDO = ifelse(status == "DEFENDIDO" , 1, 0),
ST_AT_FORMANDO = ifelse(status == "ATIVO - FORMANDO" , 1, 0),
ST_TRANCADO = ifelse(status == "TRANCADO" , 1, 0),
ST_CADASTRADO = ifelse(status == "CADASTRADO" , 1, 0)
#    FI_ = ifelse(sexo == , 1, 0),
#    FI_ = ifelse(sexo == , 1, 0),
#    FI_ = ifelse(sexo == , 1, 0),
#    FI_ = ifelse(sexo == , 1, 0),
)
dados2 <- dados_combinados %>%
#  count(matricula) %>%
mutate(
Sex_Fem = ifelse(sexo == "F", 1, 0),
Sex_Mas = ifelse(sexo == "M", 1, 0),
FI_SiSU = ifelse(forma_ingresso == "SiSU", 1, 0),
FI_PRO_SEL = ifelse(forma_ingresso == "PROCESSO SELETIVO", 1, 0),
FI_AL_ESP_POS = ifelse(forma_ingresso == "ALUNO ESPECIAL POS-GRADUACAO", 1, 0),
#    FI_NA = ifelse(forma_ingresso == "NAO INFORMADO", 1, 0),
FI_RVR = ifelse(forma_ingresso == "REOCUPAÇÃO DE VAGAS RESIDUAIS", 1, 0),
FI_VEST = ifelse(forma_ingresso == "VESTIBULAR", 1, 0),
FI_RE_SEG_CI = ifelse(forma_ingresso == "REINGRESSO SEGUNDO CICLO", 1, 0),
FI_SEL_POS = ifelse(forma_ingresso == "SELEÇÃO DE PÓS-GRADUAÇÃO", 1, 0),
#    FI_AL_MOB_INT = ifelse(forma_ingresso == "ALUNO EM MOBILIDADE INTERNACIONAL", 1, 0),
#    FI_AL_MOB_NAC = ifelse(forma_ingresso == "ALUNO EM MOBILIDADE NACIONAL", 1, 0),
#    FI_TRAS_COM = ifelse(forma_ingresso == "TRANSF. COMPULSORIA", 1, 0),
#    FI_COO_INT = ifelse(forma_ingresso == "COOPERAÇÃO INTERNACIONAL", 1, 0),
#    FI_MOB_INT = ifelse(forma_ingresso == "MOBILIDADE INTERNACIONAL", 1, 0),
#    FI_NEI = ifelse(forma_ingresso == "NEI", 1, 0),
#    FI_AL_ESP = ifelse(forma_ingresso == "ALUNO ESPECIAL" , 1, 0),
#    FI_EST_COMP = ifelse(forma_ingresso == "ESTUDOS COMPLEMENTARES" , 1, 0),
#    FI_JUD = ifelse(forma_ingresso == "JUDICIAL", 1, 0),
#    FI_PER_SED = ifelse(forma_ingresso == "PERMUTA DE SEDE", 1, 0),
#    FI_REI_AUT = ifelse(forma_ingresso == "REINGRESSO AUTOMATICO", 1, 0),
#    FI_CON_PEC = ifelse(forma_ingresso == "CONVENIO PEC-G", 1, 0),
FI_PES = ifelse(forma_ingresso == "PES", 1, 0),
#    FI_TAL_MET = ifelse(forma_ingresso == "TALENTO METRÓPOLE", 1, 0),
#    FI_TRANSF = ifelse(forma_ingresso == "TRANSFERÊNCIA", 1, 0),
#    FI_MUD_CUR = ifelse(forma_ingresso == "MUDANÇA DE CURSO", 1, 0),
FI_PRO_SEL_ESP = ifelse(forma_ingresso == "PROCESSO SELETIVO ESPECÍFICO", 1, 0),
#    FI_ORD_JUD = ifelse(forma_ingresso == "ORDEM JUDICIAL", 1, 0),
FI_PRO_SEL_EXT_TEC = ifelse(forma_ingresso == "PROCESSO SELETIVO EXTERNO TÉCNICO", 1, 0),
#    FI_SORT = ifelse(forma_ingresso == "SORTEIO", 1, 0),
FI_PROM = ifelse(forma_ingresso == "PROMOVER", 1, 0),
#    FI_SISU2 = ifelse(forma_ingresso == "SiSU 2a Edição", 1, 0),
FI_PRO_SEL_EXT_TEC_INT = ifelse(forma_ingresso == "PROCESSO SELETIVO EXTERNO TÉCNICO INTEGRADO", 1, 0),
FI_EAD_REM_GER = ifelse(forma_ingresso == "EAD REMANESCENTES GERAL", 1, 0),
FI_EAD_REM_ADM = ifelse(forma_ingresso == "EAD REMANESCENTES ADM", 1, 0),
#    FI_THE_MUS = ifelse(forma_ingresso == "THE_MUSICA", 1, 0),
#    FI_DAN_REM = ifelse(forma_ingresso == "DANÇA REMANESCENTES", 1, 0),
#    FI_THE_DAN = ifelse(forma_ingresso == "THE_DANCA", 1, 0),
#    FI_PRON = ifelse(forma_ingresso == "PRONERA", 1, 0),
#    FI_REM_GES_COO = ifelse(forma_ingresso == "REMANESCENTES GESTAO COOPERATIVAS", 1, 0),
#    FI_TRA_VOL = ifelse(forma_ingresso == "TRANSFERÊNCIA VOLUNTÁRIA" , 1, 0),
#    FI_REI_ESP = ifelse(forma_ingresso == "REINGRESSO ESPECÍFICO", 1, 0),
TD_REG = ifelse(tipo_discente == "REGULAR", 1, 0),
TD_ESP = ifelse(tipo_discente == "ESPECIAL", 1, 0),
ST_CANCELADO = ifelse(status == "CANCELADO" , 1, 0),
ST_CONCLUIDO = ifelse(status == "CONCLUÍDO" , 1, 0),
ST_FORMADO = ifelse(status == "FORMADO" , 1, 0),
ST_ATIVO = ifelse(status == "ATIVO" , 1, 0),
ST_DEFENDIDO = ifelse(status == "DEFENDIDO" , 1, 0),
ST_AT_FORMANDO = ifelse(status == "ATIVO - FORMANDO" , 1, 0),
ST_TRANCADO = ifelse(status == "TRANCADO" , 1, 0),
ST_CADASTRADO = ifelse(status == "CADASTRADO" , 1, 0)
#    FI_ = ifelse(sexo == , 1, 0),
#    FI_ = ifelse(sexo == , 1, 0),
#    FI_ = ifelse(sexo == , 1, 0),
#    FI_ = ifelse(sexo == , 1, 0),
)
dados_num <- dados_combinados %>%
select_if(is.numeric) %>%
select('ano_ingresso', 'periodo_ingresso', 'id_unidade_gestora', 'id_unidade', 'id_curso')
matrix <- cor(dados_num, use = 'complete.obs')
diag(matrix) <- 0
windows(width = 16, height = 9) # Para Windows
#Gráfico
corrplot(matrix, method = 'circle', type = 'lower', tl.cex = 0.9,title = "Matriz de Correlação") +
geom_point() +
theme_minimal() +
theme(legend.position="bottom")
dados3 <- dados_combinados %>%
count(matricula) %>%
mutate(
Sex_Fem = ifelse(sexo == "F", 1, 0),
Sex_Mas = ifelse(sexo == "M", 1, 0),
TD_REG = ifelse(tipo_discente == "REGULAR", 1, 0),
TD_ESP = ifelse(tipo_discente == "ESPECIAL", 1, 0),
ST_CANCELADO = ifelse(status == "CANCELADO" , 1, 0),
ST_CONCLUIDO = ifelse(status == "CONCLUÍDO" , 1, 0),
ST_FORMADO = ifelse(status == "FORMADO" , 1, 0),
ST_ATIVO = ifelse(status == "ATIVO" , 1, 0),
ST_DEFENDIDO = ifelse(status == "DEFENDIDO" , 1, 0),
ST_AT_FORMANDO = ifelse(status == "ATIVO - FORMANDO" , 1, 0),
ST_TRANCADO = ifelse(status == "TRANCADO" , 1, 0),
ST_CADASTRADO = ifelse(status == "CADASTRADO" , 1, 0)
)
dados3 <- dados_combinados %>%
count(status) %>%
mutate(
Sex_Fem = ifelse(sexo == "F", 1, 0),
Sex_Mas = ifelse(sexo == "M", 1, 0),
TD_REG = ifelse(tipo_discente == "REGULAR", 1, 0),
TD_ESP = ifelse(tipo_discente == "ESPECIAL", 1, 0),
ST_CANCELADO = ifelse(status == "CANCELADO" , 1, 0),
ST_CONCLUIDO = ifelse(status == "CONCLUÍDO" , 1, 0),
ST_FORMADO = ifelse(status == "FORMADO" , 1, 0),
ST_ATIVO = ifelse(status == "ATIVO" , 1, 0),
ST_DEFENDIDO = ifelse(status == "DEFENDIDO" , 1, 0),
ST_AT_FORMANDO = ifelse(status == "ATIVO - FORMANDO" , 1, 0),
ST_TRANCADO = ifelse(status == "TRANCADO" , 1, 0),
ST_CADASTRADO = ifelse(status == "CADASTRADO" , 1, 0)
)
dados3 <- dados_combinados %>%
count(status) %>%
mutate(
Sex_Fem = ifelse(sexo == "F", 1, 0),
Sex_Mas = ifelse(sexo == "M", 1, 0),
TD_REG = ifelse(tipo_discente == "REGULAR", 1, 0),
TD_ESP = ifelse(tipo_discente == "ESPECIAL", 1, 0),
)
View(matrix2)
View(matrix2)
View(dados_combinados)
View(dados_combinados)
dados3 <- dados2 %>%
filter()
count(status) %>%
mutate(
Tipo = ifelse(tipo_discente == "REGULAR", 1, 0)
)
dados3 <- dados2 %>%
#filter()
count(status) %>%
mutate(
Tipo = ifelse(tipo_discente == "REGULAR", 1, 0)
)
dados3 <- dados_status %>%
group_by(status) %>%
summarise((matricula = n()))
dados_status <- dados2 %>%
filter(!is.na(Status))
View(dados2)
View(dados2)
dados_status <- dados2 %>%
filter(!is.na(tipo_discente))
View(dados_status)
View(dados_status)
dados3 <- dados_status %>%
group_by(tipo_discente) %>%
summarise((matricula = n()))
View(dados3)
View(dados3)
dados3 <- dados_status %>%
group_by(tipo_discente) %>%
summarise(matricula = n(), ano_ingresso)
dados3 <- dados_status %>%
group_by(ano_ingresso, tipo_discente) %>%
summarise(matricula = n())
dados3 <- dados_status %>%
group_by(ano_ingresso, tipo_discente) %>%
summarise(matricula = n(), .group = 'Ano_ingresso')
#Dados3
# tipo 1 = Regular / 0 = Especial
dados_status <- dados2 %>%
filter(!is.na(tipo_discente))
dados3 <- dados_status %>%
group_by(ano_ingresso, tipo_discente) %>%
summarise(matricula = n(), .group = 'drop')
dados_status <- dados2 %>%
filter(!is.na(tipo_discente))
dados3 <- dados_status %>%
group_by(ano_ingresso, tipo_discente) %>%
summarise(matricula = n(), .groups = 'drop')
View(dados3)
View(dados3)
ggplot(dados_num, aes(x = ano_ingresso, y = tipo_discente, fill = matricula)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0, limit = c(-1, 1), space = "Lab", name="Correlação") +
theme_minimal() +
labs(title = "Mapa de Calor das Correlações", x = "Variáveis", y = "Variáveis") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
ggplot(dados3, aes(x = ano_ingresso, y = tipo_discente, fill = matricula)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0, limit = c(-1, 1), space = "Lab", name="Correlação") +
theme_minimal() +
labs(title = "Mapa de Calor das Correlações", x = "Variáveis", y = "Variáveis") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
View(dados3)
View(dados3)
View(dados_num)
View(dados_combinados)
View(dados_combinados)
dados_status <- dados2 %>%
filter(!is.na(staus))
dados_status <- dados2 %>%
filter(!is.na(status))
dados3 <- dados_status %>%
group_by(ano_ingresso, tipo_discente) %>%
summarise(matricula = n(), .groups = 'drop')
dados3 <- dados_status %>%
group_by(ano_ingresso, status) %>%
summarise(matricula = n(), .groups = 'drop')
ggplot(dados3, aes(x = ano_ingresso, y = status, fill = matricula)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0, limit = c(-1, 1), space = "Lab", name="Correlação") +
theme_minimal() +
labs(title = "Mapa de Calor das Correlações", x = "Variáveis", y = "Variáveis") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
ggplot(dados3, aes(x = ano_ingresso, y = status, fill = matricula)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0, limit = c(-6, 6), space = "Lab", name="Correlação") +
theme_minimal() +
labs(title = "Mapa de Calor das Correlações", x = "Ano", y = "Status") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
ggplot(dados3, aes(x = ano_ingresso, y = status, fill = matricula)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = median(dados3$matricula), space = "Lab", name="Correlação") +
theme_minimal() +
labs(title = "Mapa de Calor das Correlações", x = "Ano", y = "Status") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
View(dados3)
View(dados3)
ggplot(dados3, aes(x = ano_ingresso, y = status, fill = matricula)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = median(dados3$matricula), space = "Lab", name="Correlação") +
theme_minimal() +
labs(title = "Mapa de Calor das Correlações", x = "Ano", y = "Status") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
scale_x_discrete(guide = guide_axis(check.overlap = TRUE))
ggplot(dados3, aes(x = ano_ingresso, y = status, fill = matricula)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = median(dados3$matricula), space = "Lab", name="Correlação") +
theme_minimal() +
labs(title = "Mapa de Calor das Correlações", x = "Ano", y = "Status") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
scale_x_discrete(guide = guide_axis(check.overlap = false))
ggplot(dados3, aes(x = ano_ingresso, y = status, fill = matricula)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = median(dados3$matricula), space = "Lab", name="Correlação") +
#  theme_minimal() +
labs(title = "Mapa de Calor das Correlações", x = "Ano", y = "Status") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
scale_x_discrete(guide = guide_axis(check.overlap = false))
ggplot(dados3, aes(x = ano_ingresso, y = status, fill = matricula)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = median(dados3$matricula), space = "Lab", name="Correlação") +
#  theme_minimal() +
labs(title = "Mapa de Calor das Correlações", x = "Ano", y = "Status") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
#  scale_x_discrete(guide = guide_axis(check.overlap = false))
ggplot(dados3, aes(x = ano_ingresso, y = status, fill = matricula)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = median(dados3$matricula), space = "Lab", name="Correlação") +
#  theme_minimal() +
labs(title = "Mapa de Calor das Correlações", x = "Ano", y = "Status") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
ggplot(dados3, aes(x = ano_ingresso, y = status, fill = matricula)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = median(dados3$matricula), space = "Lab", name="Correlação") +
#  theme_minimal() +
labs(title = "Mapa de Calor das Correlações", x = "Ano", y = "Status") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
#  scale_x_discrete(guide = guide_axis(check.overlap = false))
dados_sexo <- dados2 %>%
filter(!is.na(sexo))
View(dados_sexo)
View(dados_sexo)
dados_mobilidade <- dados2 %>%
filter(!is.na(mobilidade_educacao))
View(dados2)
View(dados2)
dados_modalidade <- dados2 %>%
filter(!is.na(modalidade_educacao))
dados4 <- dados_modalidade %>%
group_by(ano_ingresso, modalidade_educacao) %>%
summarise(matricula = n(), .groups = 'drop')
dados_modalidade <- dados2 %>%
filter(!is.na(modalidade_educacao))
dados4 <- dados_modalidade %>%
group_by(ano_ingresso, modalidade_educacao) %>%
summarise(matricula = n(), .groups = 'drop')
ggplot(dados4, aes(x = ano_ingresso, y = Modalidade, fill = matricula)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = median(dados3$matricula), space = "Lab", name="Correlação") +
#  theme_minimal() +
labs(title = "Mapa de Calor das Correlações", x = "Ano", y = "Modalidade") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
ggplot(dados4, aes(x = ano_ingresso, y = modalidade_educacao, fill = matricula)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = median(dados3$matricula), space = "Lab", name="Correlação") +
#  theme_minimal() +
labs(title = "Mapa de Calor das Correlações", x = "Ano", y = "Modalidade") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
#  scale_x_discrete(guide = guide_axis(check.overlap = false))
View(dados4)
View(dados4)
ggpairs(dados_combinados) +
theme_minimal() +
labs(title = "Correlograma dos Dados Combinados")
ggpairs(dados_num) +
theme_minimal() +
labs(title = "Correlograma dos Dados Combinados")
View(dados_modalidade)
View(dados_num)
View(dados_num)
